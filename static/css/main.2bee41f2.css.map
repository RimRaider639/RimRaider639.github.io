{"version":3,"file":"static/css/main.2bee41f2.css","mappings":"AAAA,KAKE,kCAAmC,CACnC,iCAAkC,CAJlC,4IAEY,CAHZ,QAMF,CAEA,KACE,uEAEF,CAEA,EACE,4IAGD,CAEA,EACC,UAAW,CACX,cACD,CAEA,MACC,aAAc,CACd,kBACD,CC3BD,KAIE,uBAAwB,CAHxB,eAAgB,CAChB,iBAAkB,CAClB,oBAEF,CACA,wBAEE,QAAS,CADT,OAEF,CCRA,2BAEI,wBADA,oBACA,CAEJ,8CAEI,QAAO,CADP,OACA,CAGJ,2BC6BE,wBDzBiB,CC6BjB,sBAFA,qBAIA,mTA4CE,CA/CF,oBD9BgB,CC6Ed,iBDtEJ,qCCmBE,2BACA,kBAEA,mCAIA,SAqBA,+BA2DA,CAlFA,WAEA,WAqBA,CAvBA,iBAEA,6BAgFA,0BA1ByB,wDDjE3B,wBCDE,CDdF,qBCeI,CADF,qBACE,mTAiEuB,CAlEzB,oBDdF,CCgF2B,qYClG3B,kCDsCE,wBClCmB,CDsCnB,sBAFA,qBAIA,oTAHA,oBAGA,uEAZA,kBCvBF,oCASA,wBDkBE,CAEA,qBAEA,CAJA,oBACA,CAGA,mTAPE,CAIF,oBAJE,kmBEnCJ,mCAEI,kBAAmB,CADnB,YAAa,CAEb,sBACF,CACA,2BAIE,uBAAwB,CACxB,qBAAuB,CAHvB,iBAAkB,CAClB,oBAGF,CACA,8CAEE,QAAS,CADT,OAEF,CACA,sBAGE,4BAAgC,CADhC,+BAAiC,CAEjC,eAAgB,CAHhB,mBAAoB,CAIpB,wBACF,CAEA,wBAEE,aAAc,CADd,eAEF,CAEA,6BACE,oBAAqB,CACrB,iBACF,CAEA,4BACE,wBAAyB,CACzB,sDAAmD,CAAnD,8CACF,CAEA,0BACE,yDAAqD,CAArD,iDACF,CAEA,sDAKE,cAAe,CADf,WAAY,CAFZ,iBAAkB,CAClB,UAGF,CAEA,sBACE,iDACF,CAEA,sBACE,mDACF,CAEA,wBACE,+CACF","sources":["index.css","App.css","Components/Parallax/Parallax.module.scss","../node_modules/pixel-borders/src/styles/pixel-borders/_pixel-borders-mixins.scss","Components/TechStack/TechStack.module.scss","Components/Projects/Projects.module.css"],"sourcesContent":["body {\n  margin: 0;\n  font-family: 'ＭＳ Ｐゴシック',-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n* {\n  font-family: 'ＭＳ Ｐゴシック',-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n }\n\n p{\n  color:white;\n  font-size: 16px;\n }\n\n h1, h2{\n  color: #E79E4F;\n  margin-bottom: 40px;\n }","\nhtml {\n  max-width: 100vw;\n  overflow-y: scroll;\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none;  /* Internet Explorer 10+ */\n}\nhtml::-webkit-scrollbar { /* WebKit */\n  width: 0;\n  height: 0;\n}\n\n\n","@import \"node_modules/pixel-borders/src/styles/pixel-borders/pixel-borders-mixins\";\r\n\r\n.container {\r\n    scrollbar-width: none; /* Firefox */\r\n    -ms-overflow-style: none;  /* Internet Explorer 10+ */\r\n  }\r\n.container::-webkit-scrollbar { /* WebKit */\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n.pixBorder{\r\n  @include pixel-borders(\r\n    $corner-size: 2,\r\n    $border-size: 6px,\r\n    $border-color: #827397,\r\n    $border-inset-color: true\r\n  );\r\n}\r\n\r\n.pixBox{\r\n  @include pixel-box( \r\n  $corner-size:2, \r\n  $border-size:6px,  \r\n  $background-color:rgba(133, 88, 111, 0.5),               \r\n  $border-color: #1a1633,            \r\n  $border-inset: true,             \r\n  $border-inset-size: false,       \r\n  $border-inset-color: false,      \r\n  $border-inset-sides: bottom-right,     // Sides to apply inset border: 'all', 'top-left' or 'bottom-right' \r\n  $border-inset-color-br: false,  // Bottom right inset border colour \r\n  $border-inset-color-tl: false   // Top left inset border colour \r\n);\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n}\r\n\r\n// *, div {\r\n//   border:1px solid white;\r\n// }","// Generate SVG image for pixelated corners\n@function pixel-borders-image($corner-size, $color) {\n  $svg: '';\n  $svg-path: '';\n  $svg-size: $corner-size * 6;\n  $color: str-replace('' + $color, '#', '%23');\n\n  @if $corner-size == 1 {\n    $svg-path: 'M0 2h2v2H0zM2 0h2v2H2zM4 2h2v2H4zM2 4h2v2H2z';\n  } @else {\n    $svg-path: 'M2 2h2v2H2zM4 0h2v2H4zM10 4h2v2h-2zM0 4h2v2H0zM6 0h2v2H6zM8 2h2v2H8zM8 8h2v2H8zM6 10h2v2H6zM0 6h2v2H0zM10 6h2v2h-2zM4 10h2v2H4zM2 8h2v2H2z';\n  }\n\n  $svg: 'data:image/svg+xml,<svg xmlns=\\'http://www.w3.org/2000/svg\\' width=\\'#{$svg-size}\\' height=\\'#{$svg-size}\\'><path d=\\'#{$svg-path}\\' fill=\\'#{$color}\\' /></svg>';\n\n  @return $svg;\n}\n\n\n// String replace function - replace `$search` with `$replace` in `$string`\n@function str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n\n// Pixel border\n@mixin pixel-borders($corner-size: 1, $border-size: 4px, $border-color: #000, $border-inset-color: false) {\n\n  @supports (border-image-source: none) {\n    border-radius: ($border-size * ($corner-size + 2)) + ($corner-size * 2);\n  }\n\n  border-style: solid;\n  border-width: $border-size;\n  border-color: $border-color;\n\n  border-image-slice: $corner-size * 2;\n  border-image-width: $corner-size;\n  border-image-outset: 0;\n\n  border-image-source: url(pixel-borders-image($corner-size, $border-color));\n\n  @if $border-inset-color {\n    @include pixel-inset-border($border-size, $border-inset-color);\n  }\n\n}\n\n\n// Pixel inset border\n@mixin pixel-inset-border($border-inset-size: 4px, $border-inset-color: #ddd, $border-inset-sides: 'bottom-right', $border-inset-color-br: false, $border-inset-color-tl: false) {\n\n  $box-shadow: '';\n  @if not($border-inset-color-br) {\n    $border-inset-color-br: $border-inset-color;\n  }\n\n  @if not($border-inset-color-tl) {\n    $border-inset-color-tl: $border-inset-color;\n  }\n\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    z-index: 0;\n    bottom: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n\n    @if $border-inset-sides == 'bottom-right' or $border-inset-sides == false {\n      $box-shadow: inset -#{$border-inset-size} -#{$border-inset-size} $border-inset-color-br;\n    }\n\n    @if $border-inset-sides == 'top-left' {\n      $box-shadow: inset $border-inset-size $border-inset-size $border-inset-color-tl;\n    }\n\n    @if $border-inset-sides == 'all' {\n      $box-shadow: inset -#{$border-inset-size} -#{$border-inset-size} $border-inset-color-br, inset $border-inset-size $border-inset-size $border-inset-color-tl;\n    }\n\n    box-shadow: $box-shadow;\n  }\n\n}\n\n\n\n// Pixel box - Colours for border and inset are calculated using $background-color unless $border-color is passed\n@mixin pixel-box($corner-size, $border-size, $background-color, $border-color: false, $border-inset: true, $border-inset-size: false, $border-inset-color: false, $border-inset-sides: false, $border-inset-color-br: false, $border-inset-color-tl: false) {\n  \n  $background-color-hover: darken($background-color, 5);\n\n  @if not($border-color) {\n    $border-color: darken($background-color, 20);\n  }\n\n  @include pixel-borders($corner-size: $corner-size, $border-size: $border-size, $border-color: $border-color);\n\n  @if $border-inset-sides == 'all' and not($border-inset-color) {\n    $border-inset-color-br: darken($background-color, 10);\n    $border-inset-color-tl: lighten($background-color, 15);\n  }\n\n  @if not($border-inset-color) { \n    $border-inset-color: darken($background-color, 10);\n  }\n\n  @if $border-inset-sides == 'top-left' {\n    $border-inset-color: lighten($background-color, 15);\n  }\n\n\n  @if $border-inset { \n    @include pixel-inset-border($border-inset-size: $border-size, $border-inset-color: $border-inset-color, $border-inset-sides: $border-inset-sides, $border-inset-color-br: $border-inset-color-br, $border-inset-color-tl: $border-inset-color-tl);\n  }\n\n  background-color: $background-color;\n\n  &:hover, &:focus {\n    background-color: $background-color-hover;\n  }\n\n}\n","@import \"node_modules/pixel-borders/src/styles/pixel-borders/pixel-borders-mixins\";\r\n\r\n.pixBorderViolet{\r\n    @include pixel-borders(\r\n      $corner-size: 2,\r\n      $border-size: 3px,\r\n      $border-color: rgb(120,94,239),\r\n      $border-inset-color: false\r\n    );\r\n}\r\n\r\n.pixBorderOrange{\r\n  @include pixel-borders(\r\n    $corner-size: 2,\r\n    $border-size: 3px,\r\n    $border-color: rgb(243,132,77),\r\n    $border-inset-color: false\r\n  );\r\n}\r\n\r\n.pixBorderGreen{\r\n  @include pixel-borders(\r\n    $corner-size: 2,\r\n    $border-size: 3px,\r\n    $border-color: rgb(62,176,73),\r\n    $border-inset-color: false\r\n  );\r\n}",".container > div > div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .container {\r\n    /* max-width: 100vw; */\r\n    overflow-y: scroll;\r\n    scrollbar-width: none; /*Firefox*/\r\n    -ms-overflow-style: none;  /*Internet Explorer 10+*/\r\n    background-color: black;\r\n  }\r\n  .container::-webkit-scrollbar { /* WebKit */\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n  .text {\r\n    pointer-events: none;\r\n    justify-content: start !important;\r\n    font-family: 'Kanit', sans-serif;\r\n    line-height: 0px;\r\n    text-transform: uppercase;\r\n  }\r\n  \r\n  .number {\r\n    font-size: 300px;\r\n    color: #545864;\r\n  }\r\n  \r\n  .number span {\r\n    display: inline-block;\r\n    position: relative;\r\n  }\r\n  \r\n  .slopeBegin {\r\n    background-color: #20232f;\r\n    clip-path: polygon(20% 0, 70% 0, 50% 100%, 0% 100%);\r\n  }\r\n  \r\n  .slopeEnd {\r\n    clip-path: polygon(70% 0, 100% 0, 80% 100%, 50% 100%);\r\n  }\r\n  \r\n  .slopeBegin,\r\n  .slopeEnd {\r\n    position: absolute;\r\n    width: 170%;\r\n    height: 100%;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .pink {\r\n    background: linear-gradient(to right, deeppink 0%, coral 100%);\r\n  }\r\n  \r\n  .teal {\r\n    background: linear-gradient(to right, SlateBlue 0%, DeepSkyBlue 100%);\r\n  }\r\n  \r\n  .tomato {\r\n    background: linear-gradient(to right, tomato 0%, gold 100%);\r\n  }\r\n  "],"names":[],"sourceRoot":""}